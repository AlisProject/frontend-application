version: 2.1

references:
  ignore_master: &ignore_master
    filters:
      branches:
        ignore:
          - master
  only_master: &only_master
    filters:
      branches:
        only:
          - master
  production_steps: &production_steps
    <<: *only_master
    context: common_production_deployment

orbs:
  aws-cli: circleci/aws-cli@0.1.13
  slack: circleci/slack@3.2.0

executors:
  default:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10.15.3-browsers

commands:
  prepare-aws-cli:
    description: 'AWS CLIを準備'
    steps:
      - aws-cli/install
      - aws-cli/configure

  prepare-resources:
    description: 'リソースを準備'
    steps:
      - checkout

      - run:
          name: Install Yarn
          command: sudo npm install -g yarn@1.6.0

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}-{{ checksum "serverless.yml" }}-{{ checksum "yarn.lock" }}
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: |
            # yarn.lockの内容をすべてインストール
            yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}-{{ checksum "serverless.yml" }}-{{ checksum "yarn.lock" }}

  prepare-deployment:
    - prepare-resources
    - prepare-aws-cli

jobs:
  lint-and-test:
    executor:
      name: default

    steps:
      - prepare-resources

      - run: yarn lint

      - run:
          name: Format checking
          command: |
            yarn format;
            git diff --exit-code --quiet;
            if [ $? = 1 ]; then
              echo 'Unformat file(s) found.';
              exit 1
            fi

      - run: yarn test:coverage

      - store_artifacts:
          path: ~/repo/coverage/lcov-report/

  build:
    executor:
      name: default

    steps:
      - prepare-deployment

      - run:
          name: "Build Nuxt resources"
          command: |
            if [ $ALIS_APP_ID ]; then
              yarn build
            fi

      - persist_to_workspace:
          root: .
          paths:
            - .nuxt/*

  build-exclude-master:
    executor:
      name: default

    steps:
      - prepare-deployment

      - run:
          name: "Build Nuxt resources"
          command: |
            if [ $CIRCLE_PROJECT_USERNAME != 'AlisProject' ]; then
              yarn build
            fi

      - persist_to_workspace:
          root: .
          paths:
            - .nuxt/*

  deploy:
    executor:
      name: default

    steps:
      - prepare-deployment

      - attach_workspace:
          at: .

      - deploy:
          name: "Deployment"
          command: |
            if [ $ALIS_APP_ID ]; then
              sudo npm install -g serverless
              yarn deploy
            fi

  deploy-exclude-master:
    executor:
      name: default

    steps:
      - prepare-deployment

      - attach_workspace:
          at: .

      - deploy:
          name: "Deployment"
          command: |
            if [ $CIRCLE_PROJECT_USERNAME != 'AlisProject' ]; then
              sudo npm install -g serverless
              yarn deploy
            fi

workflows:
  main:
    jobs:
      - lint-and-test
      - build:
          <<: *only_master
      - build-exclude-master:
          <<: *ignore_master

      # ステージング環境以外へのデプロイ
      # AlisProjectアカウントからフォークした環境での実行を想定
      - deploy-exclude-master:
          <<: *ignore_master
          context: common_staging_deployment
          requires:
            - lint-and-test
            - build-exclude-master

      # ステージング環境へのデプロイ
      - deploy:
          <<: *only_master
          context: common_staging_deployment
          requires:
            - build
            - lint-and-test

      # 本番環境へのデプロイ(承認処理付き)
      - notify-to-slack-for-approval:
          <<: *production_steps
          requires:
            - lint-and-test
            - build
      - approval:
          <<: *production_steps
          type: approval
          requires:
            - lint-and-test
            - build
      - deploy:
          <<: *production_steps
          requires:
            - approval
