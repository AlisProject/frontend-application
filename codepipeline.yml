AWSTemplateFormatVersion: "2010-09-09"
Description: Codepipeline for Frontend repository

Parameters:
  AlisAppId:
    Type: String
  GitHubOwner:
    Type: String
    Description: GitHub Owner Name
    Default: 'AlisProject'
  GitHubToken:
    Type: String
    Description: GitHub Token
  Repository:
    Type: String
    Description: GitHub Repository
    Default: 'frontend-application'
  Branch:
    Type: String
    Description: GitHub Branch
    Default: 'master'
  ServiceName:
    Description: Name for the service
    Type: String
    Default: "alis-frontend-application"
    AllowedPattern: "[-_ a-zA-Z0-9]*"
    ConstraintDescription: can contain only alphanumeric characters, spaces, dashes
      and underscores.
  CodeBuildImage:
    Type: String
    Default: "aws/codebuild/standard:1.0"
    Description: Image used for CodeBuild project.
  ApprovalEmailAddress:
    Type: String
  Region:
    Type: String
  UserPoolId:
    Type: String
  ClientId:
    Type: String
  DistS3BucketName:
    Type: String
  Domain:
    Type: String
  BaseUrl:
    Type: String
  IframelyApiKey:
    Type: String
  NuxtApiGatewayName:
    Type: String
Resources:
  CodePipelineArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - '-'
        - - 'alis'
          - !Ref AlisAppId
          - 'frontend-codepipeline'

  # IAM Role
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:*'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'iam:PassRole'
                  - 'sns:Publish'
                  - 'codebuild:*'
                Effect: Allow
                Resource: '*'
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # SNS Topic
  ApprovalSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref ApprovalEmailAddress
          Protocol: "email"
      TopicName: "FrontendCodePipelineApprovalSNSTopic"

  # CodeBuild
  CodeBuildProject:
    Description: Creating AWS CodeBuild project
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub Building stage for ${Branch}.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: Branch
            Value: !Ref Branch
          - Name: ALIS_APP_ID
            Value: !Ref AlisAppId
          - Name: REGION
            Value: !Ref Region
          - Name: USER_POOL_ID
            Value: !Ref UserPoolId
          - Name: CLIENT_ID
            Value: !Ref ClientId
          - Name: DIST_S3_BUCKET_NAME
            Value: !Ref DistS3BucketName
          - Name: DOMAIN
            Value: !Ref domain
          - Name: BASE_URL
            Value: !Ref BaseUrl
          - Name: IFRAMELY_API_KEY
            Value: !Ref IframelyApiKey
          - Name: NUXT_API_GATEWAY_NAME
            Value: !Ref NuxtApiGatewayName
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
        PrivilegedMode: True
      Name: !Sub ${ServiceName}-${Branch}-build
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10

  # CodePipeline
  ProjectPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref CodePipelineArtifactStoreBucket
        Type: S3
      Name: !Sub ${ServiceName}-${Branch}-Pipeline
      RestartExecutionOnUpdate: false
      RoleArn:
        Fn::GetAtt: [ PipelineRole, Arn ]
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref Repository
                Branch: !Ref Branch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Approve # ステージング環境では除却
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn: !Ref ApprovalSNSTopic
                ExternalEntityLink: !Sub https://console.aws.amazon.com/cloudformation/home?region=${AWS::Region}
                CustomData: Go
              RunOrder: 1
            - Name: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              OutputArtifacts:
                - Name: CodebuildOutput
              RunOrder: 2
